% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/signals.R
\name{abort_if_missing_subclass}
\alias{abort_if_missing_subclass}
\title{Check an object for a subclass and signal an error if the subclass is
missing.}
\usage{
abort_if_missing_subclass(
  obj,
  subclass,
  cause_string,
  hint_string = NULL,
  call = rlang::caller_env(),
  ...
)
}
\arguments{
\item{obj}{The object to check for \code{subclass}.}

\item{subclass}{The subclass that \code{obj} is expected to have.}

\item{cause_string}{Why the action was invalid.}

\item{hint_string}{An optional hint to fix the error.}

\item{call}{The function environment that is most relevant from the user's
perspective. Default is \code{rlang::caller_env()}, which gives the environment
attached to the function that called this signal function.}

\item{...}{Passed to \code{simChef::abort()}.}
}
\description{
Check an object for a subclass and signal an error if the subclass is
missing.
}
\keyword{internal}
