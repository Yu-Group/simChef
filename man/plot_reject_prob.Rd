% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/visualizer-lib-inference.R
\name{plot_reject_prob}
\alias{plot_reject_prob}
\title{Plot the rejection probability of a hypothesis test.}
\usage{
plot_reject_prob(
  fit_results = NULL,
  eval_results = NULL,
  eval_name = NULL,
  eval_fun = "eval_reject_prob",
  eval_fun_options = NULL,
  vary_params = NULL,
  feature_col = NULL,
  show_features = NULL,
  show_identity_line = FALSE,
  show = c("line"),
  ...
)
}
\arguments{
\item{fit_results}{A tibble, as returned by \code{fit_experiment()}.}

\item{eval_results}{A list of result tibbles, as returned by
\code{evaluate_experiment()}.}

\item{eval_name}{Name of \code{Evaluator} containing results to plot. If
\code{NULL}, the data used for plotting is computed from scratch via
\code{eval_fun}.}

\item{eval_fun}{Character string, specifying the function used to compute
the data used for plotting if \code{eval_name = NULL}. If \code{eval_name}
is not \code{NULL}, this argument is ignored.}

\item{eval_fun_options}{List of named arguments to pass to \code{eval_fun}.}

\item{vary_params}{A vector of parameter names that are varied across in the
\code{Experiment}.}

\item{feature_col}{A character string identifying the column in
\code{fit_results} with the feature names or IDs.}

\item{show_features}{Vector of feature names corresponding to features to
display in the plot. If \code{NULL} (default), shows all features in the
data.}

\item{show_identity_line}{Logical indicating whether or not to plot the
y = x line.}

\item{show}{Character vector with elements being one of "boxplot", "point",
"line", "bar", "errorbar", "ribbon" indicating what plot layer(s) to
construct.}

\item{...}{Additional arguments to pass to
\code{\link[=plot_eval_constructor]{plot_eval_constructor()}}.}
}
\value{
If \code{interactive = TRUE}, returns a \code{plotly} object if
\code{plot_by} is \code{NULL} and a list of \code{plotly} objects if
\code{plot_by} is not \code{NULL}. If \code{interactive = FALSE}, returns
a \code{ggplot} object if \code{plot_by} is \code{NULL} and a list of
\code{ggplot} objects if \code{plot_by} is not \code{NULL}.
}
\description{
Plot the probability of rejecting the null hypothesis
across various levels of significance.
}
\examples{
# generate example fit_results data
fit_results <- tibble::tibble(
  .rep = rep(1:2, times = 2),
  .dgp_name = c("DGP1", "DGP1", "DGP2", "DGP2"),
  .method_name = c("Method"),
  feature_info = lapply(
    1:4,
    FUN = function(i) {
      tibble::tibble(
        # feature names
        feature = c("featureA", "featureB", "featureC"),
        # estimated p-values
        pval = 10^(sample(-3:0, 3, replace = TRUE))
      )
    }
  )
)

# generate example eval_results data
eval_results <- list(
  `Reject Prob.` = eval_reject_prob(
    fit_results,
    nested_cols = "feature_info",
    feature_col = "feature",
    pval_col = "pval"
  )
)

# create bar plot using pre-computed evaluation results
plt <- plot_reject_prob(eval_results = eval_results,
                        eval_name = "Reject Prob.",
                        feature_col = "feature")
# or alternatively, create the same plot directly from fit results
plt <- plot_reject_prob(fit_results = fit_results,
                        feature_col = "feature",
                        eval_fun_options = list(
                          nested_cols = "feature_info",
                          pval_col = "pval"
                        ))

# can customize plot (see plot_eval_constructor() for possible arguments)
plt <- plot_reject_prob(eval_results = eval_results,
                        eval_name = "Reject Prob.",
                        facet_formula = NULL,
                        plot_by = "feature")

}
\seealso{
Other inference_funs: 
\code{\link{eval_reject_prob}()},
\code{\link{eval_testing_curve_funs}},
\code{\link{eval_testing_err_funs}},
\code{\link{plot_testing_curve}()},
\code{\link{plot_testing_err}()}
}
\concept{inference_funs}
