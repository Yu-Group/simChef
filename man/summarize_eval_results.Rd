% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/evaluator-lib-utils.R
\name{summarize_eval_results}
\alias{summarize_eval_results}
\title{Developer function for summarizing evaluation results.}
\usage{
summarize_eval_results(
  eval_data,
  eval_id = NULL,
  value_col,
  summary_funs = c("mean", "median", "min", "max", "sd", "raw"),
  custom_summary_funs = NULL,
  na_rm = FALSE
)
}
\arguments{
\item{eval_data}{A grouped \code{data.frame} of evaluation results to
summarize.}

\item{eval_id}{Character string. ID to be used as a suffix when naming result
columns. Default \code{NULL} does not add any ID to the column names.}

\item{value_col}{Character string. Name of column in \code{eval_data} with
values to summarize.}

\item{summary_funs}{Character vector specifying how to summarize
evaluation metrics. Must choose from a built-in library of summary
functions - elements of the vector must be one of "mean", "median",
"min", "max", "sd", "raw".}

\item{custom_summary_funs}{Named list of custom functions to summarize
results. Names in the list should correspond to the name of the summary
function. Values in the list should be a function that takes in one
argument, that being the values of the evaluated metrics.}

\item{na_rm}{A \code{logical} value indicating whether \code{NA} values
should be stripped before the computation proceeds.}
}
\value{
A \code{tibble} containing the summarized results aggregated
over the given groups. These columns correspond to the requested
statistics in \code{summary_funs} and \code{custom_summary_funs} and end
with the suffix specified by \code{eval_id}. Note that the group IDs are
also retained in the returned \code{tibble}.
}
\description{
A helper function for developing new \code{Evaluator} functions
that summarize results over pre-specified groups in a grouped
\code{data.frame} (e.g., over multiple experimental replicates).
}
\examples{
# create example eval_data to summarize
eval_data <- tibble::tibble(.rep = rep(1:2, times = 2),
                            .dgp_name = c("DGP1", "DGP1", "DGP2", "DGP2"),
                            .method_name = "Method",
                            result = 1:4) \%>\%
  dplyr::group_by(.dgp_name, .method_name)

# summarize `result` column in eval_data
results <- summarize_eval_results(eval_data = eval_data, eval_id = "res",
                                  value_col = "result")

# only compute mean and sd of `result` column in eval_data over given groups
results <- summarize_eval_results(eval_data = eval_data, eval_id = "res",
                                  value_col = "result",
                                  summary_funs = c("mean", "sd"))

# summarize `results` column using custom summary function
range_fun <- function(x) return(max(x) - min(x))
results <- summarize_eval_results(eval_data = eval_data, value_col = "result",
                                  custom_summary_funs = list(range = range_fun))

}
