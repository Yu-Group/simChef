% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/evaluator-lib-utils.R
\name{pos}
\alias{pos}
\alias{pos.data.frame}
\alias{pos_vec}
\title{Number of estimated positive cases}
\usage{
pos(data, ...)

\method{pos}{data.frame}(
  data,
  truth,
  estimate,
  estimator = NULL,
  na_rm = FALSE,
  case_weights = NULL,
  event_level = "first",
  ...
)

pos_vec(
  truth,
  estimate,
  estimator = NULL,
  na_rm = FALSE,
  case_weights = NULL,
  event_level = "first",
  ...
)
}
\arguments{
\item{data}{Either a \code{data.frame} containing the columns specified by the
\code{truth} and \code{estimate} arguments, or a \code{table}/\code{matrix} where the true
class results should be in the columns of the table.}

\item{...}{Not currently used.}

\item{truth}{The column identifier for the true class results
(that is a \code{factor}). This should be an unquoted column name although
this argument is passed by expression and supports
\link[rlang:topic-inject]{quasiquotation} (you can unquote column
names). For \verb{_vec()} functions, a \code{factor} vector.}

\item{estimate}{The column identifier for the predicted class
results (that is also \code{factor}). As with \code{truth} this can be
specified different ways but the primary method is to use an
unquoted variable name. For \verb{_vec()} functions, a \code{factor} vector.}

\item{estimator}{One of: \code{"binary"}, \code{"macro"}, \code{"macro_weighted"},
or \code{"micro"} to specify the type of averaging to be done. \code{"binary"} is
only relevant for the two class case. The other three are general methods
for calculating multiclass metrics. The default will automatically choose
\code{"binary"} or \code{"macro"} based on \code{estimate}.}

\item{na_rm}{A \code{logical} value indicating whether \code{NA}
values should be stripped before the computation proceeds.}

\item{case_weights}{The optional column identifier for case weights.
This should be an unquoted column name that evaluates to a numeric column
in \code{data}. For \verb{_vec()} functions, a numeric vector,
\code{\link[hardhat:importance_weights]{hardhat::importance_weights()}}, or \code{\link[hardhat:frequency_weights]{hardhat::frequency_weights()}}.}

\item{event_level}{A single string. Either \code{"first"} or \code{"second"} to specify
which level of \code{truth} to consider as the "event". This argument is only
applicable when \code{estimator = "binary"}. The default uses an internal helper
that defaults to \code{"first"}.}
}
\value{
A \code{tibble} with columns \code{.metric}, \code{.estimator}, and
\code{.estimate} with 1 row of values.

For grouped data frames, the number of rows returned will be the same as the
number of groups.

For \code{pos_vec()}, a single \code{numeric} value (or \code{NA}).
}
\description{
These functions calculate the \code{\link[=pos]{pos()}} (number of estimated
positive cases) of a measurement system compared to the reference results
(the "truth").
}
\examples{
# Two class example data
two_class_example <- data.frame(
  truth = as.factor(sample(c("Class1", "Class2"), 100, replace = TRUE)),
  predicted = as.factor(sample(c("Class1", "Class2"), 100, replace = TRUE))
)

# Compute number of estimated "positive" classes
pos(two_class_example, truth = truth, estimate = predicted)
pos_vec(two_class_example$truth, two_class_example$predicted)

}
