% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dgp-lib-utils.R
\name{return_DGP_output}
\alias{return_DGP_output}
\title{Developer function to return consistent outputs in DGP.}
\usage{
return_DGP_output(X, y, support, data_split, train_prop, return_values)
}
\arguments{
\item{X}{Data matrix or data frame.}

\item{y}{Response vector.}

\item{support}{Vector of feature indices in the true support of the DGP.}

\item{data_split}{Logical; if \code{TRUE}, splits data into training and test
sets according to \code{train_prop}.}

\item{train_prop}{Proportion of data in training set if \code{data_split =
TRUE}.}

\item{return_values}{Character vector indicating what objects to return in
list. Elements in vector must be one of "X", "y", "support".}
}
\value{
A list of the named objects that were requested in
\code{return_values}. See brief descriptions below.
\describe{
\item{X}{A \code{data.frame}.}
\item{y}{A response vector of length \code{nrow(X)}.}
\item{support}{A vector of feature indices indicating all features used in
the true support of the DGP.}
}
Note that if \code{data_split = TRUE} and "X", "y"
are in \code{return_values}, then the returned list also contains slots for
"Xtest" and "ytest".
}
\description{
Helper function that returns a consistent output for any DGP
function.
}
\examples{
# Return training/test splits using iris data and completely dense support 
dgp_out <- return_DGP_output(X = iris \%>\% dplyr::select(-Species),
                             y = iris$Species,
                             support = 1:4,
                             data_split = TRUE,
                             train_prop = 0.5,
                             return_values = c("X", "y", "support"))

}
