% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/evaluator-lib-inference.R
\name{eval_testing_curve_funs}
\alias{eval_testing_curve_funs}
\alias{eval_testing_curve}
\alias{summarize_testing_curve}
\title{Evaluate and/or summarize ROC or PR curves for feature rankings, ranked by
p-value.}
\usage{
eval_testing_curve(
  fit_results,
  vary_params = NULL,
  nested_data = NULL,
  truth_col,
  pval_col,
  group_cols = NULL,
  curve = c("ROC", "PR"),
  options = list(),
  na_rm = FALSE
)

summarize_testing_curve(
  fit_results,
  vary_params = NULL,
  nested_data = NULL,
  truth_col,
  pval_col,
  group_cols = NULL,
  curve = c("ROC", "PR"),
  options = list(),
  na_rm = FALSE,
  x_grid = seq(0, 1, by = 0.01),
  summary_funs = c("mean", "median", "min", "max", "sd", "raw"),
  custom_summary_funs = NULL,
  eval_id = ifelse(curve == "PR", "precision", "TPR")
)
}
\arguments{
\item{fit_results}{A tibble, as returned by the \code{fit} method.}

\item{vary_params}{A vector of parameter names that are varied across in the
\code{Experiment}.}

\item{nested_data}{(Optional) Character string. If specified, should be the
name of the column in \code{fit_results} containing columns that must be
unnested before evaluating results. Default is \code{NULL}, meaning no
columns in \code{fit_results} need to be unnested prior to computation.}

\item{truth_col}{A character string identifying the column in
\code{fit_results} with the true feature support data. Each element in this
column should be an array of length \code{p}, where \code{p} is the number
of features. Elements in this array should be binary with \code{TRUE} or
\code{1} meaning the feature (corresponding to that slot) is in the support
and \code{FALSE} or \code{0} meaning the feature is not in the support.}

\item{pval_col}{A character string identifying the column in
\code{fit_results} with the estimated p-values data. Each element in
this column should be an array of length \code{p}, where \code{p} is the
number of features and the feature order aligns with that of
\code{truth_col}.}

\item{group_cols}{(Optional) A character string or vector identifying the
column(s) to group observations by before evaluating metrics. This is
useful for assessing within-group metrics.}

\item{curve}{Either "ROC" or "PR" indicating whether to evaluate the ROC or
Precision-Recall curve.}

\item{options}{A list of named options to pass to \code{pROC::roc()} such as
\code{smooth}. These options should not include \code{response},
\code{predictor}, \code{levels}, \code{quiet}, or \code{direction}. This
argument is only used when computing the ROC and is ignored otherwise.}

\item{na_rm}{A \code{logical} value indicating whether \code{NA} values
should be stripped before the computation proceeds.}

\item{x_grid}{Vector of values between 0 and 1 at which to evaluate the ROC
or PR curve. If \code{curve = "ROC"}, the provided vector of values are
the FPR values at which to evaluate the TPR, and if \code{curve = "PR"},
the values are the recall values at which to evaluate the precision.}

\item{summary_funs}{Character vector specifying how to summarize
evaluation metrics. Must choose from a built-in library of summary
functions - elements of the vector must be one of "mean", "median",
"min", "max", "sd", "raw".}

\item{custom_summary_funs}{Named list of custom functions to summarize
results. Names in the list should correspond to the name of the summary
function. Values in the list should be a function that takes in one
argument, that being the values of the evaluated metrics.}

\item{eval_id}{Character string. ID to be used as a suffix when naming result
columns. Default \code{NULL} does not add any ID to the column names.}
}
\value{
The output of \code{eval_testing_curve()} is a \code{tibble} with the
following columns:
\describe{
\item{.rep}{Replicate ID.}
\item{.dgp_name}{Name of DGP.}
\item{.method_name}{Name of Method.}
\item{curve_estimate}{A list of tibbles with x and y coordinate values for
the ROC/PR curve for the given experimental replicate. If
\code{curve = "ROC"}, the \code{tibble} has the columns \code{.threshold},
\code{FPR}, and \code{TPR} for the threshold, false positive rate, and true
positive rate, respectively. If \code{curve = "PR"}, the \code{tibble} has
the columns \code{.threshold}, \code{recall}, and \code{precision}.}
}
as well as any columns specified by \code{group_cols} and \code{vary_params}.

The output of \code{summarize_testing_curve()} is a grouped \code{tibble}
containing both identifying information and the evaluation curve
results aggregated over experimental replicates. Specifically, the identifier
columns include \code{.dgp_name}, \code{.method_name}, and any columns
specified by \code{group_cols} and \code{vary_params}. In addition, there are
results columns corresponding to the requested statistics in
\code{summary_funs} and \code{custom_summary_funs}. If \code{curve = "ROC"},
these results columns include \code{FPR} and others that end in the suffix
"_TPR". If \code{curve = "PR"}, the results columns include \code{recall} and
others that end in the suffix "_precision".
}
\description{
Evaluate the ROC or PR curves corresponding to the feature
importances as ranked by their p-values. \code{eval_testing_curve()}
evaluates the ROC or PR curve for each experimental replicate separately.
\code{summarize_testing_curve()} summarizes the ROC or PR curve across
experimental replicates.
}
\examples{
# generate example fit_results data for a feature selection problem
fit_results <- tibble::tibble(
  .rep = rep(1:2, times = 2),
  .dgp_name = c("DGP1", "DGP1", "DGP2", "DGP2"),
  .method_name = c("Method"),
  feature_info = lapply(
    1:4,
    FUN = function(i) {
      tibble::tibble(
        # feature names
        feature = c("featureA", "featureB", "featureC"),
        # true feature support
        true_support = c(TRUE, FALSE, TRUE),
        # estimated p-values
        pval = 10^(sample(-3:0, 3, replace = TRUE))
      )
    }
  )
)

# evaluate feature selection ROC/PR curves for each replicate
roc_results <- eval_testing_curve(
  fit_results,
  curve = "ROC",
  nested_data = "feature_info",
  truth_col = "true_support",
  pval_col = "pval"
)
pr_results <- eval_testing_curve(
  fit_results,
  curve = "PR",
  nested_data = "feature_info",
  truth_col = "true_support",
  pval_col = "pval"
)
# summarize feature selection ROC/PR curves across replicates
roc_summary <- summarize_testing_curve(
  fit_results,
  curve = "ROC",
  nested_data = "feature_info",
  truth_col = "true_support",
  pval_col = "pval"
)
pr_summary <- summarize_testing_curve(
  fit_results,
  curve = "PR",
  nested_data = "feature_info",
  truth_col = "true_support",
  pval_col = "pval"
)

}
\seealso{
Other inference_funs: 
\code{\link{eval_reject_prob}()},
\code{\link{eval_testing_err_funs}},
\code{\link{plot_reject_prob}()},
\code{\link{plot_testing_curve}()},
\code{\link{plot_testing_err}()}
}
\concept{inference_funs}
