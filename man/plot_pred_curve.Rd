% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/visualizer-lib-prediction.R
\name{plot_pred_curve}
\alias{plot_pred_curve}
\title{Plot ROC/PR curves.}
\usage{
plot_pred_curve(
  fit_results = NULL,
  eval_results = NULL,
  eval_name = NULL,
  eval_fun = "summarize_pred_curve",
  eval_fun_options = NULL,
  vary_params = NULL,
  curve = c("ROC", "PR"),
  show = c("line", "ribbon"),
  ...
)
}
\arguments{
\item{fit_results}{A tibble, as returned by \code{\link[=fit_experiment]{fit_experiment()}}.}

\item{eval_results}{A list of result tibbles, as returned by
\code{\link[=evaluate_experiment]{evaluate_experiment()}}.}

\item{eval_name}{Name of \code{Evaluator} containing results to plot. If
\code{NULL}, the data used for plotting is computed from scratch via
\code{eval_fun}.}

\item{eval_fun}{Character string, specifying the function used to compute
the data used for plotting if \code{eval_name = NULL}. If \code{eval_name}
is not \code{NULL}, this argument is ignored.}

\item{eval_fun_options}{List of named arguments to pass to \code{eval_fun}.}

\item{vary_params}{A vector of \code{DGP} or \code{Method} parameter names that are
varied across in the \code{Experiment}.}

\item{curve}{Either "ROC" or "PR" indicating whether to plot the ROC or
Precision-Recall curve.}

\item{show}{Character vector with elements being one of "boxplot", "point",
"line", "bar", "errorbar", "ribbon" indicating what plot layer(s) to
construct.}

\item{...}{Additional arguments to pass to
\code{\link[=plot_eval_constructor]{plot_eval_constructor()}}.}
}
\value{
If \code{interactive = TRUE}, returns a \code{plotly} object if
\code{plot_by} is \code{NULL} and a list of \code{plotly} objects if
\code{plot_by} is not \code{NULL}. If \code{interactive = FALSE}, returns
a \code{ggplot} object if \code{plot_by} is \code{NULL} and a list of
\code{ggplot} objects if \code{plot_by} is not \code{NULL}.
}
\description{
Plot ROC/PR curves or some summary thereof across experimental
replicates.
}
\examples{
# generate example fit_results data
fit_results <- tibble::tibble(
  .rep = rep(1:2, times = 2),
  .dgp_name = c("DGP1", "DGP1", "DGP2", "DGP2"),
  .method_name = c("Method"),
  # true response
  y = lapply(1:4,
             FUN = function(x) {
               as.factor(sample(0:1, size = 100, replace = TRUE))
             }),
  # predicted class probabilities
  class_probs = lapply(1:4, FUN = function(x) runif(n = 100, min = 0, max = 1))
)

# generate example eval_results data
eval_results <- list(
  ROC = summarize_pred_curve(
    fit_results, truth_col = "y", prob_cols = "class_probs", curve = "ROC"
  ),
  PR = summarize_pred_curve(
    fit_results, truth_col = "y", prob_cols = "class_probs", curve = "PR"
  )
)

# create summary ROC/PR plots using pre-computed evaluation results
roc_plt <- plot_pred_curve(eval_results = eval_results,
                           eval_name = "ROC", curve = "ROC",
                           show = c("line", "ribbon"))
pr_plt <- plot_pred_curve(eval_results = eval_results,
                          eval_name = "PR", curve = "PR",
                          show = c("line", "ribbon"))
# or alternatively, create the same plots directly from fit results
roc_plt <- plot_pred_curve(fit_results = fit_results,
                           show = c("line", "ribbon"), curve = "ROC",
                           eval_fun_options = list(truth_col = "y",
                                                   prob_cols = "class_probs"))
pt_plt <- plot_pred_curve(fit_results = fit_results,
                          show = c("line", "ribbon"), curve = "PR",
                          eval_fun_options = list(truth_col = "y",
                                                  prob_cols = "class_probs"))

# can customize plot (see plot_eval_constructor() for possible arguments)
roc_plt <- plot_pred_curve(eval_results = eval_results,
                           eval_name = "ROC", curve = "ROC",
                           show = c("line", "ribbon"),
                           plot_by = ".dgp_name")

}
\seealso{
Other prediction_error_funs: 
\code{\link{eval_pred_curve_funs}},
\code{\link{eval_pred_err_funs}},
\code{\link{plot_pred_err}()}
}
\concept{prediction_error_funs}
